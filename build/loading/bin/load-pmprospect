#!/usr/bin/env perl


my $usage = <<'EOU';
#-------------------------------------------------------------------------------
# NAME: load-pseq
# PURPOSE: load prospect templates into Unison
# USAGE: load-pseq ARGUMENTS OPTIONS <template files ...>
# ARGUMENTS (required):
#   --origin|-o <origin>: name of origin
# OPTIONS:
#   --verbose|-v: flag to output more processing information
#
# $Id$
#------------------------------------------------------------------------------
EOU

$^W++;
use strict;
use Bio::SeqIO;
use Getopt::Long;
use XML::Simple;
use Data::Dumper;
use Digest::MD5  qw(md5_hex);
use Unison;


my %opts = (
			'origin' => undef,
			'verbose' => 0,
);
GetOptions( \%opts,
			'origin|o=s',
			'verbose|v')
  || die("$0: bad usage:\n$usage\n");

(defined $opts{origin})
  || die("$0: --origin (-o) is mandatory\n\n$usage");

my $u = new Unison(dbname=>'csb-dev', username=>'loader');

my $porigin_id = $u->porigin_si_porigin_id($opts{origin});
printf(STDERR "# loading prospect templates into $opts{origin} (porigin_id=$porigin_id)\n") if($opts{vebose});

my %pmprospect = map { $_->[0]=>1 } @{$u->selectall_arrayref("select acc from pmprospect where porigin_id=$porigin_id")};
printf(STDERR "# %d template names read from pmprospect origin=$opts{origin}\n", scalar keys %pmprospect) if($opts{vebose});

my %md5;

my $xs = new XML::Simple;

if (@ARGV)
  { process1(shift) while (@ARGV); }
else
  { 
  while(my $fn = <>)
	{ chomp $fn; process1($fn); }  
  }

exit(0);




sub process1
  {
  my $fn = shift;

  # ideally, id would be the template name
  # unfortunately, prospect scop template names are NOT the scop ids
  # my $id = $r->{name};
  my $id = $fn;  $id =~ s%^.*/%%; $id =~ s/\.xml$//;
  if (exists $pmprospect{$id})
	{
	warn("template $id exists...skipping\n");
	return;
	}

  my $r = $xs->XMLin($fn);
  if (not defined $r)
	{ warn("XMLin failed on $fn\n"); return; }
  my $seq = $r->{seq};
  my ($len) = $r->{fsspData} =~ m/with (\d+) residues/;
  my ($ncores) = $r->{fsspData} =~ m/and (\d+) cores/;
  my $desc = sprintf("%d residues; %d cores", $len, $ncores);

  my $pseq_id;
  my $md5 = md5_hex($seq);

  if (defined %md5 and exists $md5{ $md5 })
	{ $pseq_id = $md5{ $md5 }; }
  else
	{
	$pseq_id = $u->pseq_si_pseq_id( $seq );
	$md5{ $md5 } = $pseq_id;
	}
  if (not defined $pseq_id)
	{ die("! sequence for $fn not in unison and couldn't be added"); return; }

  $u->add_palias($pseq_id,$porigin_id,$id,$desc);
  $u->add_pmprospect($porigin_id,$pseq_id,$id,$len,$ncores);

  printf(STDERR "# added $id (pseq_id=$pseq_id) to Prospect templates\n") if($opts{vebose});
  }
