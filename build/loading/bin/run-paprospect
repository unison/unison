#!/usr/bin/env perl
# run p2 and insert into Unison
#-------------------------------------------------------------------------------
# name: run-p2
# purpose: run prospect locally and insert the results into Unison
# arguments: 
#   --p2params_id|-p <p2params_id>: p2params_id for loading (required)
#   --tfile|-t <template file>: file containing a list of templates (optional)
#   --update|-u: force update (i.e. delete cooresponding rows in unison before inserting) (optional)
# usage: run-p2 [psql options] --p2params_id <p2params_id> [--tfile <template file>] [--update]
#
# $Id: run-p2,v 1.4 2003/06/05 16:49:30 cavs Exp $
#-------------------------------------------------------------------------------

use warnings;
use strict;

select STDERR; $|++;
select STDOUT; $|++;

use Unison;
use Prospect2::Options;
use Prospect2::LocalClient;
use Prospect2::Exceptions;
use Getopt::Long qw(:config gnu_getopt);
use Data::Dumper;
use Error qw(:try);
$ENV{'DEBUG'} = 1;

my %options;
my ($p2params_id,$tfile, $update);
GetOptions(
       \%options,@Unison::options,
       'p2params_id=i',\$p2params_id,
       'tfile=s',\$tfile,     # name of template file
       'update',\$update      # force update (delete rows before insert)
      )
  or die("$0: bad usage\n");

die( "--p2params_id|-p parameter missing\n" ) if ( ! defined $p2params_id || $p2params_id eq '' );
my $u;
if ( defined $ENV{'PGPASSWD'} ) {
	$u = new Unison( 'password' => $ENV{'PGPASSWD'} );
} else {
	$u = new Unison();
}
$u->do( 'set search_path=public,unison' );
my $po = $u->get_p2options_by_p2params_id($p2params_id);
$po->{tfile} = $tfile;
my $pc = new Prospect2::LocalClient( options=>$po );

PSEQ_ID: while( my $pseq_id = shift ) {
  print "pseq_id .. $pseq_id\n";
  print "\tthreading ...\n";
  my $seq = $u->get_sequence_by_pseq_id( $pseq_id );
  my (@summaries);
  try {
    print "trying to thread ...\n" if $ENV{'DEBUG'};
    (@summaries) = $pc->thread_summary( $seq );
  } catch Prospect2::RuntimeError with {
    my $e = shift;
    print STDERR "Caught Prospect2::RuntimeError: " . $e->detail() . "\n";
    print STDERR "Skipping this pseq_id ($pseq_id)\n";
    next PSEQ_ID;
  } catch Prospect2::Exception with {
    my $e = shift;
    print STDERR "Caught Prospect2::Exception: " . $e->detail() . "\n";
    print STDERR "Skipping this pseq_id ($pseq_id)\n";
    next PSEQ_ID;
  };
  print "\tloading ...\n";
  foreach my $ts ( @summaries ) {
    $u->delete_thread($pseq_id,$p2params_id,$ts) if $update;
    $u->insert_thread($pseq_id,$p2params_id,$ts);
  }
}
