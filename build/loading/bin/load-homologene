#! /usr/bin/env perl

#-------------------------------------------------------------------------------
# NAME: load-homologene
# PURPOSE: script to parse homologene data files and load the homologene table
#
# $Id$
#-------------------------------------------------------------------------------

use warnings;
use strict;
use Unison;

my $u = new Unison();
my $sql = 'insert into homologene (hid,tax_id,gene_id,gene_symbol,gi,acc,pseq_id) ' .
	'values (?,?,?,?,?,?,?)';
(my $sqlf = $sql) =~ s/\?/%s/g;
$sqlf .= "\n";
my $sth = $u->prepare( 'insert into homologene ' .
	'(hid,tax_id,gene_id,gene_symbol,gi,acc,pseq_id) values ' .
	'(?,?,?,?,?,?,?)' );
die( "USAGE: load-homologene homologene.data\n" ) if $#ARGV!=0;

my ($skipped,$loaded) = (0,0);
open(FP,$ARGV[0]) or die( "can't open $ARGV[0] for reading" );
while(<FP>) {
	my @fld = split;
	my @pseq_id = $u->get_pseq_id_from_alias_exact($fld[5]);
	if      ( $#pseq_id < 0 ) {  # no match - skip
		printf( "get_pseq_id_from_alias_exact() return no pseq_id for alias='$fld[5]' - skip\n" );
		$skipped++;
		next;
	} elsif ( $#pseq_id > 0 ) { # multiple matches - take lower pseq_id (hack around proteome bug)
		@pseq_id = sort { $a <=> $b } @pseq_id;
	} 
	printf ($sqlf,@fld,$pseq_id[0]);
	$sth->execute(@fld,$pseq_id[0]);
	$loaded++;
}

print "\n\nLoaded: $loaded\nSkipped: $skipped\n";
