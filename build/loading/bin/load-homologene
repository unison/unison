#! /usr/bin/env perl
# load-homologene -- load NCBI homologene data into Unison
# $Id: load-homologene,v 1.3 2005/10/09 09:39:30 rkh Exp $


use warnings;
use strict;
use Unison;
use Unison::Exceptions;
use Error qw(:try);


($#ARGV == 0)
  || die( "USAGE: load-homologene homologene.data\n" );

my @cols = qw(hid tax_id gene_id gene_symbol gi acc pseq_id);

my $u = new Unison();
my $sql = sprintf('insert into homologene (%s) values (%s)',
				  join(',', @cols),
				  join(',', map {'?'} 0..$#cols));
my $sth = $u->prepare( $sql );


$u->begin();
$u->do('truncate unison.homologene');

my ($seen,$skipped,$loaded) = (0,0,0);
open(FP,$ARGV[0])
  or die( "$ARGV[0]: $!\n" );
while(<FP>) {
  $seen++;

  my @data = split;

  my @pseq_id = $u->get_pseq_id_from_alias_exact($data[5], 'RefSeq');
  if ( $#pseq_id < 0 ) {
	# no match - skip
	warn("! get_pseq_id_from_alias_exact($data[5]) returned NULL; skipping\n");
	$skipped++;
	next;
  }
  push(@data, $pseq_id[0]);

  try {
	$sth->execute( @data );
	$loaded++;
  } catch Unison::Exception with {
	die($_[0]);
  };
}
close(FP);

print(STDERR "$seen seen, $loaded loaded, $skipped skipped\n");

exit(0);
