#! /usr/bin/env perl

#-------------------------------------------------------------------------------
# NAME: load-homologene
# PURPOSE: script to parse homologene data files and load the homologene table
#
# $Id: load-homologene,v 1.1 2004/04/13 23:21:51 cavs Exp $
#-------------------------------------------------------------------------------

use warnings;
use strict;
use Unison;
use Unison::Exceptions;
use Error qw(:try);

my $u = new Unison();
my $sql = 'insert into homologene (hid,tax_id,gene_id,gene_symbol,gi,acc,pseq_id) ' .
	'values (?,?,?,?,?,?,?)';
(my $sqlf = $sql) =~ s/\?/%s/g;
$sqlf .= "\n";
my $sth = $u->prepare( 'insert into homologene ' .
	'(hid,tax_id,gene_id,gene_symbol,gi,acc,pseq_id) values ' .
	'(?,?,?,?,?,?,?)' );
die( "USAGE: load-homologene homologene.data\n" ) if $#ARGV!=0;

my ($seen,$skipped,$loaded) = (0,0,0);
open(FP,$ARGV[0])
  or die( "$ARGV[0]: $!\n" );
while(<FP>) {
  $seen++;

  my @fld = split;

  my @pseq_id = $u->get_pseq_id_from_alias_exact($fld[5], 'RefSeq');
  if ( $#pseq_id < 0 ) {
	# no match - skip
	warn("! get_pseq_id_from_alias_exact($fld[5]) returned NULL; skipping\n");
	$skipped++;
	next;
  } elsif ( $#pseq_id > 0 ) {
	die("Eek! Multiple distinct pseq_ids for RefSeq $fld[5]!\n");
  }
  push(@fld, $pseq_id[0]);

  printf( "# $sqlf", @fld );
  try {
	$sth->execute( @fld );
  } catch Unison::Exception with {
	warn($_[0]);
	$skipped++;
  };

  $loaded++;
}

print(STDERR "$seen seen, $loaded loaded, $skipped skipped\n");
