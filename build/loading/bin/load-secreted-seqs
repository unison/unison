#! /usr/bin/env perl

use Genentech::Unison;
use Genentech::Sigcleave;
use Bio::SeqIO;
use Bio::Seq;
use warnings;
use strict;
use DBI;

#-------------------------------------------------------------------------------
# name: load-secreted-seqs
# purpose: script to load signal-sequence cleaved sequences into unison
# 
# algorithm:
#	get list of pseq_ids
#		parse sigcleave results
#		insert sigcleave feature for pseq_id
#		if  (sigcleave score > 3.5 and site < 40 residue )
#			insert new sequence with ss cleaved
#		
#-------------------------------------------------------------------------------

die( "USAGE: load-secreted-seqs <sigcleave output>\n" ) if $#ARGV!=0;

my $uni = new Genentech::Unison( 'username' => 'loader', 'dbname' => 'csb' );
my $sc = new Genentech::Sigcleave;

my $origin_id = $uni->origin_si_origin_id( "EMBOSS/sigcleave" );
my $pftype_id  = $uni->get_pftype_id( "EMBOSS/sigcleave" );

my $id;
my $no_good_score=1;
my $score_cutoff = 3.5;
my $start_cutoff = 50;
my $cnt=0;
my $keeper=0;
my $no_good=0;
open(FP,"$ARGV[0]") or die( "can't open $ARGV[0] for reading" );
foreach ( <FP> ) {
	if      ( m/^# Sequence: (\w+) / ) {
		$cnt++;
		$no_good++ if ( defined $id && $no_good_score ); 
		$id = $1;
		$no_good_score = 1;
	} elsif (( $no_good_score == 1 ) && 
		( m/\((\d+)\) Score (.*?) length (\d+) at residues (\d+)->(\d+)/ )) {

		my $score = $2;
		my $site = $5;
			
		if (  $score >= $score_cutoff && $site < $start_cutoff ) {
			$keeper++;

			my $pep = $uni->get_seq( $id );
			my $seq = Bio::Seq->new( -seq => "$pep", -id  => $id );

			# insert feature for sigcleave
			my %f;
			$f{'pseq_id'} = $id;
			$f{'pftype_id'} = $pftype_id;
			$f{'start'} = 1;
			$f{'stop'} = $site - 1;
			$f{'score'} = $score;
			$uni->add_pfsigcleave( %f );

			#
			# create ss cleaved version
			#
			print "score: $score, site: $site\n";
			my $cleaved = $sc->getCleavageSeq( 'seq' => $seq, 'site' => $site); 

			#
			# add ss cleaved to database
			#
			my $pseq_id = $uni->pseq_si_pseq_id( $cleaved->seq() );
			my $descr = "Version of pseq_id=$id with signal sequence cleaved (1-" . ($site-1) . ")";
			$uni->add_palias( $pseq_id, $origin_id, $cleaved->display_id(), $descr, $id );

			$no_good_score = 0;
		}
	}
}

print "\n",'-'x80,"\n";
print "cnt: $cnt\n";
print "keeper: $keeper\n";
print "no good: $no_good\n";
close(FP);
