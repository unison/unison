#! /usr/bin/env perl

#-------------------------------------------------------------------------------
# NAME: load-blat
# PURPOSE: parse BLAT psl output for protein-to-genome alignments. load
#          output into set of unison tables.
# 
# $Id$
#-------------------------------------------------------------------------------

use warnings;
use Bio::Tools::ProteinToGenomeBlat;
use Unison;
use strict;

die( "USAGE: load-blat output.psl\n" ) if $#ARGV != 0;
my $bio = new Bio::Tools::ProteinToGenomeBlat( -file => $ARGV[0] );
my $uni = new Unison();

my $genasm_id = 1;   # hard-code for now
my $score_cutoff = 50;
my $pct_ident_cutoff = 50;

my $aln_sth = $uni->prepare( 'select assign_p2gblataln( ?, ?, ?, ?, ?, ? )' );
my $hsp_sth = $uni->prepare( 'select ins_p2gblathsp( ?, ?, ?, ?, ?, ?, ?, ? )' );

while( my $r = $bio->next_result() ){
  my @pct_ident  = $r->get_tag_values('percent_id');
  my @ident      = $r->get_tag_values('ident');
  my @qgap_cnt   = $r->get_tag_values('qgap_cnt');
  my @qgap_bases = $r->get_tag_values('qgap_bases');
  my @tgap_cnt   = $r->get_tag_values('tgap_cnt');
  my @tgap_bases = $r->get_tag_values('tgap_bases');

  # insertion criteria: score >= score_cutoff and pct_ident > pct_ident_cutoff
  if ( $r->score >= $score_cutoff && $pct_ident[0] >= $pct_ident_cutoff ) {

    $r->seq_id =~ m/Unison:(\d+)/;
    my $pseq_id = $1;

    my @hsp_ids;
    foreach my $f ( $r->get_SeqFeatures() ) {
      $f->seq_id =~ m/chr(\w+)/;
      my $chr = $1;
          
      # load each HSP
      $hsp_sth->execute( $genasm_id, $chr, ( $f->strand > 0 ) ? 'true' : 'false', $f->start, $f->end, $pseq_id, $f->hstart, $f->hend );
      push @hsp_ids,$hsp_sth->fetchrow_array;
    }

    # get serialized hsp_str - probably should use database version
    my $hsp_str = join (':', @hsp_ids );

    # load the alignment
    print "Unison:$pseq_id mapped to chr$chr (ident: $ident[0], score: ",$r->score,", exons: ",($#hsp_ids+1),")\n";
    $aln_sth->execute( $hsp_str, $ident[0], $qgap_cnt[0], $qgap_bases[0], $tgap_cnt[0], $tgap_bases[0] );
  }
}
