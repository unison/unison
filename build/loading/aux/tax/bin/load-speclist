#!/usr/bin/env perl

use warnings;
use strict;
use Unison;
use Data::Dumper;

my $u = new Unison;
my $upd = $u->prepare_cached('update tax.spspec set latin=?,common=?,synonyms=? where tax_id=?');


my $go = 0;
my %act;									# active record
while( my $line = <> ) {
  if (!$go) {
	$go++ if $line =~ m/^__/;
	next;
  }

  if ( $line =~ m/^(\w+) \s+ ([ABEV]) \s+ (\d+)[:;] \s N=(.*)/x ) {
	flush(\%act);
	$act{gs} = $1;
	$act{k} = $2;
	$act{id} = $3;
	$act{latin} = $4;
  } elsif ( $line =~ m/C=(.*)/ ) {
	push( @{$act{common}}, $1 );			# can there be more than one CN?
  } elsif ( $line =~ m/S=(.*)/ ) {
	push( @{$act{synonyms}}, $1 );
  } elsif ( $line =~ m/^\s*$/ ) {
	last;
  } else {
	die("missed $.:$line");
  }
}


sub flush {
  return unless exists $act{id};
  $act{common} = exists $act{common} ? join('; ',@{$act{common}}) : undef;
  $act{synonyms} = exists $act{synonyms} ? join('; ',@{$act{synonyms}}) : undef;
  my @args = map {$act{$_}} qw(latin common synonyms id);
  my @nargs = reverse  map {defined $_ ? $_ : '<NULL>'} @args;
  print( "@nargs\n") if defined $act{common} and $act{common} =~ m/;/;
  $upd->execute(@args);

#  printf("update tax.spspec set latin=%s,common=%s,synonyms=%s where spspec_id=%s;\n",
#		 sql_quote(name_fmt($act{name},$act{cs})), $act{id} );

#  printf("insert into tax.spspec (id,k,gs,name) values (%s,%s,%s,%s);\n",
#		 sql_quote($act{id},$act{k}, $act{gs}, name_fmt($act{name},$act{cs}) ));
  undef %act;
}
