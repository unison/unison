#!/usr/bin/env perl
# This script generates SQL dumps of the sst unqproform, prodna, fam, and
# unqfamily tables for import into unison

use strict;
use warnings;
use DBI;

my %opts =
  (
   verbose => 1,
  );

my @table_defs =
  (
   # table			columns
   [ 'unqproform', 	qw(unqid proid) 					],
   [ 'prodna',	 	qw(proid dnaid) 					],
   [ 'fam', 	 	qw(famid familyname shortname)	 	],
   [ 'unqfamily',	qw(unqid famid) 					],
  );


select(STDERR); $|++;
select(STDOUT); $|++;
print(STDERR '$Id: sst-import,v 1.8 2005/12/01 06:05:02 rkh Exp $ ', "\n");

my $sql;
my $sth;
my $dsn = 'dbi:Oracle:bioprd1';
my $dbh = DBI->connect($dsn) #, 'rkh', $ENV{SSTPASS}) 
  || die("connect($dsn) failed: ", $DBI::errstr, "\n");

print(STDERR "# connected to $dsn\n");
print("-- $0 ($dsn)\n");

for(my $ti=0; $ti<=$#table_defs; $ti++) {
  my ($table,@cols) = @{$table_defs[$ti]};
  my $cols = join(',',@cols);
  my $msg = "preparing table sst.$table";
  my $sql = "select $cols from $table";
  my $n = 0;

  print(STDERR "# $table: $sql\n");

  print("TRUNCATE sst.$table;\n");
  print("COPY sst.$table ($cols) FROM stdin;\n");

  $sth = $dbh->prepare($sql);
  $sth->execute()
	|| die("$sql: ", $dbh->errstr());
  while( my @row = $sth->fetchrow_array() ) {
	$n++;
	print( join("\t", map {sql_escape($_)} @row), "\n" );
	print(STDERR "\r$msg: $n rows") if $opts{verbose} and $n % 1000 == 0;
  }
  print("\\.\n");
  print(STDERR "\r$msg: $n rows\n") if $opts{verbose};
}



#################################################################333
## INTERNALS

sub sql_escape() {
  my $v = shift;

  if (not defined $v) {
	return '\N';
  }

  $v =~ s/\t/\\t/g;
  $v =~ s/\n/\\n/g;
  return $v;
}
