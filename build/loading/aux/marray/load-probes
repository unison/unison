#! /usr/bin/env perl

use warnings;
use strict;

use Getopt::Long qw(:config gnu_getopt);
use Unison::Exceptions;
use Unison;

my %opts = 
  (
   origin_id => undef,
   verbose => 0,
  );
GetOptions(\%opts,
                   'origin_id|o=i',
		   'verbose|v+'
		  ) || die("$0: you got usage issues, short stack\n");

(defined $opts{origin_id})
  || die("$0: origin_id not defined (-o)\n");

my $u = new Unison( dbname=>'csb-dev', username=>'loader' );


$opts{datafile} = $u->selectrow_array(<<EOSQL);
SELECT data_url FROM origin
WHERE origin_id=$opts{origin_id}
EOSQL

(defined $opts{datafile})
   || die("$0: data_url is NULL for origin_id=$opts{origin_id}\n");

(-e $opts{datafile})
  || die("$0: $opts{datafile} doesn't exist\n");

open(DATA, $opts{datafile}) || die "Cannot open $opts{datafile}\n";

($opts{chip_id},$opts{chip}) = $u->selectrow_array(<<EOSQL);
SELECT chip_id,name FROM marray.chip
WHERE current_origin_id=$opts{origin_id}
EOSQL

(defined $opts{chip_id})
   || die("$0: chip_id is NULL for origin_id=$opts{origin_id}\n");

($opts{genasm}) = ($opts{datafile} =~ m/.*\.(.*)\.snap$/);
($opts{genasm}) =~ s/_R/\-/;

$opts{genasm_id} = $u->selectrow_array("SELECT genasm_id FROM genasm WHERE name=\'$opts{genasm}\'");

(defined $opts{genasm_id})
   || die("$0: genasm_id is NULL for origin_id=$opts{origin_id}\n");

print(STDOUT "BEGIN;\n");
print(STDOUT "delete from marray.probe where origin_id=$opts{origin_id};\n");
print(STDOUT "\\copy marray.probe FROM STDIN\n");

while(<DATA>) {
  next if not (/^>$opts{chip}/);
  my @cols = split(/\s+/,$_);
  $cols[0] =~ s/^>$opts{chip}\.//;

  my ($chr,$gstart,$gstop) = ($cols[9] =~ /^(\S+):(\d+)..(\d+)/);
  my $strand = ($cols[10] eq '+' ? 't' : 'f');

  my $md5 = ( $opts{origin_id} == 100001 ? $cols[11] : $cols[12]);

  $md5 =~ s/md5://;
  print(STDOUT "$cols[0]\t$opts{chip_id}\t$chr\t$strand\t$opts{genasm_id}\t$gstart\t$gstop\t$opts{origin_id}\t$md5\n");
}

print(STDOUT "\\.\n");
print(STDOUT "COMMIT;\n");



