# -*-outline-*-

* standardize calling conventions
use hashes/hash references for everything
# Q: to use key=>val or -key=>val (why do people like -key?)
# A: From http://perldoc.perl.org/perlmodstyle.html:
#   The use of hash keys starting with a hyphen (-name ) or entirely in
#   upper case (NAME ) is a relic of older versions of Perl in which
#   ordinary lower case strings were not handled correctly by the =>
#   operator. While some modules retain uppercase or hyphenated argument
#   keys for historical reasons or as a matter of personal style, most new
#   modules should use simple lower case keys. Whatever you choose, be
#   consistent!
- implemenation should include a mechanism to include defaults, checking
  for undefined or missing opts, perhaps checking arg types, and reporting
  failure context.
- see ~rkh/sandbox/perl/named-fx-args and perl best practices

* collapsable fieldsets for groups
Collapse fieldsets to save space
NOTE: These don't have to be fieldsets. Ideally, the same scripting would
work for various element types. It seems best to use obvious element
pairs, eg. dt+dd (show/hide the dd), fieldset legend+body (show/hide the body).
UPDATE: see Ubuntu's launchpad. They do exactly this. See
https://bugs.launchpad.net/ubuntu/+source/gnome-terminal/+bug/189656
and click 'Add a comment/attachment' at the bottom
Also see http://template-toolkit.org/about.html .

* use exceptions more broadly

* show sql
use collapsable frames for sql too

* disprot
Refactor disprot loading to be more like other loading.
Problem: how to handle daily limit

* pseq_functions.pl
In pseq_generif_v, we use blast_v to get generifs of similar sequences. We
don't do the same for go. This leads to the odd result that pseq_features
will show generifs but not go annotations for non-entrez genes.  Example:
http://csb/~rkh/unison/cgi/pseq_functions.pl?pseq_id=1775768, Solution:
pseq_generif_v is too tricky -- don't use blast there, but perhaps create
pseq_blast_generif_v (or whatever). 

* sequence similarity views should be the reflexive
blast_v and friends should have rows for implied self-self
alignments. Without this, joins don't produce reasonable results. For
example, if we use a pseq_id that corresponds to an entrez gene as a query
sequence to blast_v, it won't return itself, and therefore a join to
pseq_gene_mv won't get a gene_id. In short, it fails the most trivial case.

* standardize function names
We have a lot of useful functions, but they're hard to find. We should
think (again) about standardization. Example: we have both pseq_locus_rep
and representative_pseq_id that do essentially the same thing. I (Reece)
haven't a clue why I made both, but I suspect forgetfulness.

* genome tab
rename Analysis to Protein to make way for non-protein analyses?
* integrate help, etc.
- get web table col descriptions from database col comments

* HTML Table  and SQL Table modules, w/ col sorting, etc.

* rethink site and page design
- pseq_ pages always have pseq_id entry field?
- what should pseq_summary do if pseq_id is missing?
- top level entry point
- ideally, we should move to a framework like Catalyst with mochikit

* popups and redisplay
- consider automatic submit for redisplay when user selects from popup

* sequence selection
- several command line tools reimplement ways to select sequences by 1)
  pseq_id, 2) fasta input, 3) gi annotation, 4) alias, etc.  This
  functionality should be consolidated, including standardizing any
  command line options.

* overhaul view structure
- need better mat view scheme (contrib package?)
- modularize and simplify -- we have too many views
- When a _mv exists, we should probably build it from a _dv (rename the
  existing _v to _dv) and use _v as a shallow wrapper for the _mv. That
  way, existing tools that use _dv will get the _mv instead of the slower
  dynamic view.


* assume limited search path
- e.g., ( unison ), definitely not user
- schema-qualify all tables and views
- provide option which add user tables

- see FIXME and BUG tags

- `make update' should work for all loading/ subdirs

- release tag in database

- perl5-prereq download/install/something

- require web release = API release = db release?

- --libraries -- Unison::options or somesuch dumps %INC for Unison modules
==> TODO <==
browse views
- excel export
- split cv def into sql and order by

select 
	pseq_locus,
	best_alias,
	descr,
	added,
	unq, pro, fam
	Y.*
FROM 
	(
	SELECT 
		[distinct on (locus_rep)],
	    locus rep,
		X.*
	FROM (select * from def) X
	[ORDER BY] locus_rep
	) Y
ORDER BY cvorder


* db restore script
- helper script to set search path, analyze, etc

* web deploy script
mkdir -p /local/usr-local/opt/unison/current/www/tmp
chmod 777

* loci show extremely slow

* need better way to test

* jmol 11 support

* start,stop integer -> 2 byte smallint w/offset
This must be done everywhere, but is most relevant for small tables to
make row sizes smaller. The effect of this should be assessed.



############################################################################
############################################################################
## DONE
############################################################################
############################################################################

* asterisks should be removed from incoming sequences
We used to remove them. Then Genengenes came along with stars, which are a
non-IUPAC extension to indicate termination. Then I discovered that some
sequences differ /only/ by the terminal *, which means that they're
trivally different from other sequences (e.g., Cosmic's MCL1 v. MCL1_HUMAN).

