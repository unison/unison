Unison Loading and Updating				-*-outline-*-

This document describes the Unison loading and updating process. It is
intended for maintainers of a Unison database.

Unison loading and updating is mostly achieved through makefiles using
scripts in unison/sbin. There's is an ongoing effort to unify the
operation of these, but some tweaking and debugging may still be required.

Loading occurs in these phases:
- Loading auxiliary data
- Loading sequences
- Loading models (HMMs, threading backbones, etc)
- Inferring tax_ids for loaded sequences.
- Building sequence sets based on simple sequence data (init met, length)
  or associated data (origin, tax_id). This includes building sets of
  sequences for which results should be precomputed.
- Computing and loading results.
- Building sequence sets based on computed results.

Details about these loading phases are elaborated upon below.


* General loading 
Data are always loaded by the 'loader' user. The exact permissions on a
table for insert, update, or delete depend on the needs for that data
source.

A typical data loading invocation is:
$ PGPASSWORD=thepass make Refseq.load


* Auxiliary data loading
Auxiliary data refers to third party loaded into distinct schemas.  This
includes scop, swiss-prot taxonomy, go/gong, pdb, and others.  The intent
is to incorporate these with no (or very minor) changes.  These are
intentially distinct from the Unison schema and not dependent on it in any
way.

These schemas have same-named subdirectories in csb-db, and typically
Makefiles within which load or update the schemas.

Current auxiliary schemas:
** go (and GOng)
** pdb
** scop
** tax

NB: homologene and MINT were incorrectly loaded into unison itself and
will be moved.


* Sequence loading
Sequences may be loaded from any source recognized by bioperl's SeqIO
module. Currently, fasta and Refseq-formatted files are loaded routinely.
See loading/pseq/Makefile for examples.

Sequences are loaded with aliases and annotations into origins. An alias
must be unique within the origin; if it is not, the previous sequence is
deprecated and the new sequence assumes the alias.


* Model loading
Models are any entity to which a sequence may be aligned. Currently,
models are other sequences, HMMs, PSSMs, structure templates, or regular
expressions.

** Prospect2 templates
** HMMs (Pfam, in-house)
** PSSMs (Proceryon, CDD)
** genome assemblies
** regexps



* Data derived in Unison (e.g., by plpgsql code):

** infer_tax_id
See sbin/update_tax_ids.

** update sets
select update_uni_sets;




* Precomputed results
Typically, results are only precomputed for the uni_hmr set, which are
intended to be high-quality sequences from human, mouse, and rat.
Currently, there is no single script which runs new sequences.

** run-paprospect2

** run-pahmm

** run-papssm

** run-blat

** pairwise blast

** run regexps


* Extrinsic sequence sets


* Post-loading tasks

** move blast database files to common location

** generate schema docs

** mv_best_annotation

** update stats

** load new scop
scop2pmodel 

