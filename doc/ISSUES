-*-outline-*-

issues / todo:

IMPORTANT:

* sequence representatives
  Currently, all sequences in pseq are equal.  In reality, sequences may
  be usefully related by: 1) subsequences, 2) alternative splicing, 3)
  paralogs, 4) orthologs, 5) homology (not 3 or 4), and probably others as
  well.  Ex: given a good thread to pseq_id 333, how does one determine that
  333 is really a sigcleave'd fragment of 222 (case 1 above).



TO-DO AT NEXT BACKUP/RESTORE:
* standardize on timestampe WITHOUT timezone
  no issue, just for consistency
* w/o oids
  fix 4 tables made by cavs
* pseq.len: smallint -> int 
* s/p2/prospect2/
* porigin_id() needs to be created ahead of dv_*



BACKBURNER:

* collect UNQ,DNA -> pseq_id mapping (via PRO, presumably)

* drop ins,upd,del from all tables upon staging? how?

* stage and/or prod building should write intermediate dump

* db release should be dump date (I think)

* split unison/ from csb-db/; move tax/, scop/, gong/ to unison/ 

* API documentation is abysmal

* delete from palias rule
  wipes out corresponding paliasorigin & pseqalias rows
  (or, just set not current?)

* changes to pmodelsets and porigins are not tracked by run_history
run_history refers to pmodelsets and porigins. It is possible that the set
of models (pmodel_ids) implied by using either or both of these criteria
will change over time, thereby making run_history data incorrect. The
options are to make such sets immutable (not possible for porigin), or
better, attach time stamps to pmodelset and porigin rows, or to simply
remove run_history rows when a pmodelset or porigin set is changed.

* params_prospect2
Simplify inheritance and inherited triggers by folding this back into
params. If the Unison perl API really needs this (for options like
global_local), then we should create a view which shadows params and
augments with the params_prospect2 data. If not, then we can simply drop
params_prospect2. Either way, params needs to be the /single/ table with
the params_id primary key.

* pftypes, params, run_history
problems:
- some params map to multiple types (e.g., tmdetect). This happens
  whenever a program returns >1 type of feature (but multiple features of
  1 type is okay) 
- what's the right way to ask run_history whether (e.g.)
  Pfam has been run on a sequence. One solution is to have a modelset of
  Pfam models, but that's a deviation from the original intent of
  modelsets: to collect models related by function, not by model type.  

* standardize naming conventions better

* sequences may be "anonymous", meaning not referenced by any alias
  do we care?

* It's currently hard to tell which analyses have been run on some sequences.
  For analyses which may legitimately have no return value (e.g., tmdetect
  returns no S, N, or M region), it's impossible to distinguish sequences
  for which the analysis returned nothing from those which haven't yet been run.

* add current_user to pseq, palias tables

* order in asset aggregate

* Pfam and BLAST evalues
Pfam and BLAST evalues depend on the number of models and on the database
size respectively.  Both programs allow a database size to be entered on
the command line; perhaps this should be part of the run params so that
evals are reproducible.  Scores are always reproducible.





DONE
* sequence insertion too slow   DONE
  pseq_si_pseq_id too slow... (len,md5) instead of (md5,len)?
  problem: md5 was indexed but not 'analyzed', so md5 lookups were sluggish
  
* `model' table  DONE
  hmm, p2template, sbprofile (for structure-based p.), etc are all models
  they should inherit from a general models table which contains links
  to GO, etc.
  drag: migrate current p2template to inherited version of p2template 

* hmm, pfhmm tables  DONE
  hmm and features based on hmms

* species  DONE
  add tax table from NCBL (~rkh/tax/).  I'd like to see this as an
  ontology too, but I can't find any reference to such.  Propose to GO?

* pftype2pftype_id( ) lookup function  DONE

* Gene Ontology
  link models and sequences to GO, with interpro2go, spkw2go

* p2thread -> pfp2thread
  rename for conformity (pfeatures have prefix pf)

* Unison::DBI should use wrap DBI to use exceptions.

* load-fasta
  option to generate tax_id with alias from tagline
