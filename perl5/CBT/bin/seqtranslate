#!/usr/bin/env perl

=head1 NAME

seqtranslate -- translates DNA sequences to protein sequences
S<$Id: seqtranslate,v 1.1 2003/05/05 20:14:04 rkh Exp $>

=head1 SYNOPSIS

seqtranslate <na.fasta >aa.fasta

=head1 DESCRIPTION

B<seqtranslate> translates DNA sequences to protein sequences using the
"standard" codon table.

=head1 OPTIONS AND ARGUMENTS

=over

=item -f

=cut

use strict;
use warnings;
use Bio::PrimarySeq;
use Bio::SeqIO;
use Bio::SeqUtils;
use Getopt::Long qw(:config gnu_getopt);
use Data::Dumper;

my %opts = 
  (
   'f0' => 0, 'f1' => 0, 'f2' => 0,
   'r0' => 0, 'r1' => 0, 'r2' => 0,
  );

print(STDERR '# $Id: seqtranslate,v 1.1 2003/05/05 20:14:04 rkh Exp $ ', "\n");

GetOptions
  (\%opts,
   'forward|f' => sub { $opts{f0}=$opts{f1}=$opts{f2}=1 },
   'reverse|r' => sub { $opts{r0}=$opts{r1}=$opts{r2}=1 },
   'f0|0', 'f1|1', 'f2|2',
   'r0|3', 'r1|4', 'r2|5',
  )
  || die("$0: usage\n");

( $opts{f0} || $opts{f1} || $opts{f2} || $opts{r0} || $opts{r1} || $opts{r2} )
  || die("no frame selected for translation\n");


my $in = new Bio::SeqIO( -format => 'Fasta', -fh => *STDIN );
my $out = new Bio::SeqIO( -format => 'Fasta', -fh => *STDOUT );


while( my $ps = $in->next_seq() ) {
  my $idr = $ps->id();

  if ($opts{f0} || $opts{f1} || $opts{f2}) {
	$ps->id("$idr-F");
	_write( $out, _translate($ps,0) ) if ($opts{f0});
	_write( $out, _translate($ps,1) ) if ($opts{f1});
	_write( $out, _translate($ps,2) ) if ($opts{f2});
  }

  if ($opts{r0} || $opts{r1} || $opts{r2}) {
	$ps->seq($ps->revcom()->seq());
	$ps->id("$idr-R");
	_write( $out, _translate($ps,0) ) if ($opts{r0});
	_write( $out, _translate($ps,1) ) if ($opts{r1});
	_write( $out, _translate($ps,2) ) if ($opts{r2});
  }
}



sub _write {
  my $out = shift;
  my $ps = shift;
  if ( $ps->seq() =~ m/[^X]/ ) {
	$out->write_seq( $ps );
  } else {
	warn( sprintf("skipped %s (%s): all X\n",
				  $ps->display_id(), $ps->desc()) );
  }
}

sub _translate {
  my $ps = shift;
  my $frame = shift;
  my $xl = $ps->translate(undef,undef,$frame);
  my $id = $xl->display_id() . $frame;
  my ($Fn) = $id =~ m/-([FR]\d)/;
  $xl->display_id( $id );
  $xl->desc( $xl->desc . " /trans=$Fn" );
  return $xl;
}


=pod

=head1 BUGS

=head1 AUTHOR

 Reece Hart, Ph.D.                     rkh@gene.com, http://www.gene.com/
 Genentech, Inc.                       650/225-6133 (voice), -5389 (fax)
 Bioinformatics Department
 1 DNA Way, MS-93                      http://www.in-machina.com/~reece/
 South San Francisco, CA  94080-4990   reece@in-machina.com, GPG: 0x25EC91A0

=cut
