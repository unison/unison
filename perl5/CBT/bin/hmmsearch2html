#!/usr/bin/env perl
# hmmsearch2html -- html-ize hmmsearch output for easier browsing
# usage: hmmsearch2html <hmmsearch_file>
# * 2002/10/01 (Tue) 08:55 Reece Hart <reece@in-machina.com, rkh@gene.com>



$^W++;
use 5.6.0;
use strict;
use IO::File;

my $fn = shift;
(defined $fn)
  || die ("missing filename\n");

my $fh = new IO::File;
$fh->open("<$fn")
  || die("$fn: $!\n");

my $dir; ($dir = $fn) =~ s/\.\w+$//;
print(STDERR "writing output to $dir/\n");
-d $dir
  || mkdir($dir)
  || die("$dir: $!\n");


my $pr = '';								# preface
my $do = '';								# domain
my $al = '';								# alignments
my %de;

my $state = 0;

while( my $line = <$fh> )
  {
  if ($state == 0)							# preface
	{
	if ($line =~ m/^Scores for complete sequences/)
	  { $state = 1; next; }

	$pr .= $line;
	}

  elsif ($state == 1)						# complete sequence scores
	{
	if ($line =~ m/^Parsed for domains:/)
	  { $state = 2; $do = $line; next; }

	#Sequence   Description                                  Score    E-value  N
	#--------   -----------                                  -----    ------- ---
	#PRO2354    UNQ1255 DNA88446 [min] Human LEPR            296.4    2.1e-85   2
	if ( not $line =~ m/^Sequence|^-----/ 
		 and $line =~ m/^([-\w]+)\s+(.{43})/ )
	  {
	  $de{$1} = $2;
	  $de{$1} =~ s/\s+$//;
	  }
	}

  elsif ($state == 2)						# domain scores
	{
	if ($line =~ m/^Alignments of top-scoring domains/)
	  { $state = 3; $al = $line; next; }

	#Sequence   Domain  seq-f seq-t    hmm-f hmm-t      score  E-value
	#--------   ------- ----- -----    ----- -----      -----  -------
	#PRO582       1/1     138   349 ..     1   228 []   225.0  6.3e-64
	
	if (not $line =~ m/^Sequence|^----/ 
		and $line =~ s/^([-\w]+)\s+\d+\/\d+\s+(\d+)\s+(\d+)/<a href="al.html#$1\/$2-$3" target="al">$&<\/a>/ )
	  {
	  my $q = $1;
	  my $bofn = "bo/$q-dblast.bo";
	  chomp $line;
	  $line .= ' #';
	  $line .= ( -f "$dir/$bofn" ? "<a href=\"$bofn\">dblast</a>; " : '' );
	  $line .= $de{$q} . "\n";
	  };

	$do .= $line;
	}

  elsif ($state == 3)						# alignments
	{
	#PRO582: domain 1 of 1, from 138 to 349: score 225.0, E = 6.3e-64
	#                   *->pqnlsCftnnlegnltCsWepgtdtg...ptnytlhyrrsllekeee
	#                      p n+sC+++n++ +ltC+W+pg ++ +  +tny+l+y+ +++++  +
	#      PRO582   138    PVNISCWSKNMK-DLTCRWTPGAHGEtflHTNYSLKYKLRWYGQDNT 183  
	if ( $line =~ s/^([-\w]+): domain \d+ of \d+, from (\d+) to (\d+).*/<a name="$1\/$2-$3">$&<\/a>/ )
	  {
	  my $q = $1;
	  my $bofn = "$dir/bo/$q-dblast.bo";
	  my $botop = botop($bofn);
	  if (defined $botop)
		{
		$botop =~ s/^/  |-/mg;
		$botop = "  + Top 10 Dayhoff BLAST alignments:\n" . $botop . "\n";
		$botop = "<font color=\"#ff00ff\">$botop</font>";
		$line .= $botop;
		}
	  }

	$al .= $line;
	}

  else
	{ die("state==$state??\n"); }

  }

$fh->close();


$fn = "$dir/index.html";
$fh->open(">$fn")
  || die("$fn: $!\n");
$fh->print(
'<html>
<frameset rows="10%,20%,*">
<frame src="pr.html" name="pr">
<frame src="do.html" name="do">
<frame src="al.html" name="al">
</frameset>
');
$fh->close();
print("  wrote $fn\n");

$fn = "$dir/pr.html";
$fh->open(">$fn")
  || die("$fn: $!\n");
$fh->print("<html><body><pre>$pr</pre></body></html>");
$fh->close();
print("  wrote $fn\n");

$fn = "$dir/do.html";
$fh->open(">$fn")
  || die("$fn: $!\n");
$fh->print("<html><body><pre>$do</pre></body></html>");
$fh->close();
print("  wrote $fn\n");

$fn = "$dir/al.html";
$fh->open(">$fn")
  || die("$fn: $!\n");
$fh->print("<html><body><pre>$al</pre></body></html>");
$fh->close();
print("  wrote $fn\n");


exit(0);


sub botop
  {
  my $fn = shift;
  my $fh = new IO::File;
  if ( not $fh->open("<$fn") )
	{ warn("$fn: $!\n"); return; }
  my $res = '';
  while(<$fh>)
	{
	next if $.<20;
	last if $.>30;
	$res .= $_ if m/\s(?:\d+.\d+|\d*e-\d+)$/;   # and $1+0>1e-20" );
	}
  $fh->close();
  return $res;
  }
