#!/usr/bin/env perl

use strict;
use warnings;
use Data::Dumper;

# users to exclude
my @user_ex = qw(compbio loader unison);
my %user_ex = map {$_=>1} @user_ex;

# bins for connection by user, host, etc.
my %cb_user;
my %cb_host;
my %cb_user_db;
my %cb_user_host;
my %cb_date;
my %cb_date_user;

my $date_re = qr/200\d-\d\d-\d\d/;
my $time_re = qr/\d\d:\d\d:\d\d/;


my @pending;
while(<>) {
  #2004-07-14 09:00:43 [26233] LOG:  connection received: host=tallac.gene.com port=34485
  #2004-07-14 09:00:43 [26233] LOG:  connection authorized: user=rkh database=csb-dev

  if (m/^($date_re) ($time_re) \[(\d+)\] LOG:  connection received: host=(\S+)/) {
	$pending[$3] = { date=>$1, time=>$2, host=>$4 };
  } elsif (m/^($date_re) ($time_re) \[(\d+)\] LOG:  connection authorized: user=(\S+) database=(\S+)/) {
	if (not defined $pending[$3]) {
	  die("$.: connection never received!\n  $_");
	}

	my %conn = (%{$pending[$3]}, user=>$4, database=>$5);
	undef $pending[$3];

	my ($host,$user,$db,$date) = @conn{qw(host user database date)};

	next if exists $user_ex{$user};

	$host =~ s/\.gene\.com//;				# drop domain name
	$host =~ s/^comp\d+/comp*/				# group connections into
	  or $host =~ s/^(vpn-pc)-\d+/$1-*/	    # comp, vpn-pc, or dhcpNN- bins
	  or $host =~ s/^(dhcp\d+)-\d+/$1-*/;
	$date =~ s/-\d\d$//; 					# trim to month

	push(@{$cb_user{$user}}, \%conn);
	push(@{$cb_host{$host}}, \%conn);
	push(@{$cb_user_host{$user}{$host}},\%conn);
	push(@{$cb_user_db{$user}{$db}},\%conn);
	push(@{$cb_date{$date}}, \%conn);
	push(@{$cb_date_user{$date}{$user}}, \%conn);
  }
}



print('$Id: log-summarize,v 1.3 2004/11/11 17:26:41 rkh Exp $ ', "\n\n");

printf("connections by %d user(s):\n", scalar keys %cb_user);
foreach my $user (sort keys %cb_user) {
  my $conn = $cb_user{$user};
  my $earliest = $conn->[0]->{date};
  my $latest = $conn->[$#$conn]->{date};

  printf("  %-10s: %4d conn, %2d hosts, %2d dbs; %s..%s\n",
		 $user,
		 $#{$cb_user{$user}}+1, 
		 (scalar keys %{$cb_user_host{$user}}),
		 (scalar keys %{$cb_user_db{$user}}),
		 $earliest, $latest
		);
}


printf("\nconnections by %d host(s):\n", scalar keys %cb_host);
foreach my $host (sort keys %cb_host) {
  printf("  %-30.30s %4d\n", $host, $#{$cb_host{$host}}+1);
}


printf("\nconnections by month:\n", scalar keys %cb_date);
foreach my $date (sort keys %cb_date) {
  my @users = keys %{$cb_date_user{$date}};
  printf("  $date %4d total (%d users = {%s})\n", 
		 $#{$cb_date{$date}}, $#users+1, join(',',sort @users));
}
